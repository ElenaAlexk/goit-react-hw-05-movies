{"version":3,"file":"static/js/681.5715dee3.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,IAAkBP,GAF7B,gBAEPQ,EAFO,EAEPA,QACRJ,EAAWI,GAHI,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBJ,GACD,GAAE,CAACN,KAGF,4BACE,oCACCG,EAAQQ,OAAS,GAChB,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADE,OAQf,wDAIP,C,+LCnCKC,EAAU,+BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACoBC,IAFb,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,iCAC8CK,EAD9C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBG,EAAe,mCAAG,WAAMvB,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,oBACkBiB,EADlB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfI,EAAc,mCAAG,WAAMxB,GAAN,yFACLmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,4BAC0BiB,EAD1B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdb,EAAiB,mCAAG,WAAMP,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,6BAC2BiB,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>We don't have any reviews</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0638d4937acfae28483912f2b585d98b'; //персональний ключ\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","fetchMovieReviews","results","console","log","length","map","author","content","id","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMoviesById","fetchMovieCast"],"sourceRoot":""}