{"version":3,"file":"static/js/759.784e383c.chunk.js","mappings":"8PACA,EAAgC,iC,SC0ChC,EAxCkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAGXC,EACND,EADMC,MAAOC,EACbF,EADaE,OAAQC,EACrBH,EADqBG,aAAcC,EACnCJ,EADmCI,SAAUC,EAC7CL,EAD6CK,aAAcC,EAC3DN,EAD2DM,YAEvDC,EAAc,IAAIC,KAAKL,GAAcM,cACrCC,GAAcL,EAAe,GAAM,KAAKM,QAAQ,GAChDC,EAAM,yCAAqCN,GAEjD,OACE,+BACE,iBAAKO,UAAWC,EAAhB,WACE,gBAAKC,IAAKH,EAAQI,IAAKf,KACvB,4BACE,0BACGA,EADH,KACYM,EADZ,QAGA,wCAAgBG,EAAhB,QACA,sCACA,uBAAIN,KACJ,oCACA,uBAAIF,GAAUA,EAAO,GAAGe,cAKjC,EC5BD,EAA4B,gCAA5B,EAA4E,oCAA5E,EAAsH,0BCsDtH,EA/CqB,WAAO,IAAD,IACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACnDC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOC,EAAP,KAAsBC,EAAtB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,WAAMN,GAAN,iGAECO,EAAAA,EAAAA,IAAgBP,GAFjB,OAEjBQ,EAFiB,OAGvBJ,EAAiBI,GAHM,gDAKvBC,QAAQC,IAAR,MALuB,yDAAH,sDAQxBJ,EAAmBN,EACpB,GAAE,CAACA,KAGF,iCACE,SAAC,KAAD,CAAMW,GAAIf,EAAoBgB,QAA9B,UACE,mBAAQC,KAAK,SAASxB,UAAWC,EAAjC,+BAIF,SAAC,EAAD,CAAWd,MAAO2B,KAClB,oDACA,gBAAId,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAmBqB,GAAG,OAAvC,qBAIF,yBACE,SAAC,KAAD,CAAMtB,UAAWC,EAAmBqB,GAAG,UAAvC,2BAKJ,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,+LCnDKC,EAAU,+BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACoBC,IAFb,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,iCAC8CK,EAD9C,gCADS,uBACxBF,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBb,EAAe,mCAAG,WAAMP,GAAN,yFACNmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,oBACkBiB,EADlB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAc,mCAAG,WAAMvB,GAAN,yFACLmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,4BAC0BiB,EAD1B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMxB,GAAN,yFACRmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDhB,EADC,6BAC2BiB,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"MovieCard_cardContainer__ncF0f\"};","import PropTypes from 'prop-types';\nimport css from './MovieCard.module.css';\n\nconst MovieCard = ({ movie }) => {\n  //const location = useLocation();\n  //const backLinkLocationRef = location.state?.from ?? '/movies';\n  const { title, genres, release_date, overview, vote_average, poster_path } =\n    movie;\n  const releaseDate = new Date(release_date).getFullYear();\n  const userScore = ((vote_average / 10) * 100).toFixed(0);\n  const imgUrl = `https://image.tmdb.org/t/p/w300${poster_path}`;\n\n  return (\n    <>\n      <div className={css.cardContainer}>\n        <img src={imgUrl} alt={title} />\n        <div>\n          <h1>\n            {title} ({releaseDate})\n          </h1>\n          <p>User score: {userScore}%</p>\n          <h3>Overwiew</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres[0].name}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieInfo\":\"MovieDetails_movieInfo__RFaEp\",\"movieInfoLink\":\"MovieDetails_movieInfoLink__x8-Fe\",\"btn\":\"MovieDetails_btn__t5pTm\"};","import { Suspense } from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/api';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  //запит на фільм//\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMoviesById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <button type=\"button\" className={css.btn}>\n          &#8592; Go back\n        </button>\n      </Link>\n      <MovieCard movie={selectedMovie} />\n      <h3>Additional information</h3>\n      <ul className={css.movieInfo}>\n        <li>\n          <Link className={css.movieInfoLink} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className={css.movieInfoLink} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0638d4937acfae28483912f2b585d98b'; //персональний ключ\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["movie","title","genres","release_date","overview","vote_average","poster_path","releaseDate","Date","getFullYear","userScore","toFixed","imgUrl","className","css","src","alt","name","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMoviesById","movieData","console","log","to","current","type","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesByQuery","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}