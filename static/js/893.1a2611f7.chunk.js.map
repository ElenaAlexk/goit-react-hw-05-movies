{"version":3,"file":"static/js/893.1a2611f7.chunk.js","mappings":"+QAuBA,EArBqB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAYtB,OACE,0BACE,kBAAMA,SAbW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAQF,EAAIG,OAAOC,SAASF,MAAMG,MACnCH,GAILH,EAASG,GACTF,EAAIG,OAAOG,SAJTC,EAAAA,GAAAA,MAAY,yBAKf,EAIiCC,MAAO,CAAEC,UAAW,QAAlD,WACE,kBAAOC,KAAK,QAAQC,KAAK,OAAOH,MAAO,CAAEI,MAAO,YAChD,mBAAQD,KAAK,SAAb,wBAIP,ECwCD,EAxDe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MASAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRnB,EAAK,UAAGiB,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAKpB,EAAL,CAEA,IAAMqB,EAAQ,mCAAG,gHAEaC,EAAAA,EAAAA,IAAmBtB,GAFhC,gBAGU,KADfuB,EAFK,EAELA,SACIC,OACVnB,EAAAA,GAAAA,MAAY,uCAEZQ,EAAUU,GACVE,QAAQC,IAAIH,IAPD,gDAUblB,EAAAA,GAAAA,MAAY,KAAMsB,SAClBd,EAAU,IAXG,yDAAH,qDAcdQ,GAhBkB,CAiBnB,GAAE,CAACJ,IASJ,OACE,6BACE,SAAC,EAAD,CAAcpB,SARG,SAAAG,GACnBkB,EAAgB,CAAElB,MAAAA,GACnB,KAOG,wBACGY,EAAOgB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMnB,GAAhD,SACGe,EAAMK,SAFFL,EAAME,GADA,QAUxB,C,+LC1DKI,EAAU,+BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACoBC,IAFb,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBjB,EAAkB,mCAAG,WAAMtB,GAAN,yFACTsC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACcC,EADd,iCAC8CpC,EAD9C,gCADS,uBACxBuC,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,oBACkBL,EADlB,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAc,mCAAG,WAAMD,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,4BAC0BL,EAD1B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMF,GAAN,yFACRH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACDM,EADC,6BAC2BL,EAD3B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qD","sources":["components/SearchMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { toast } from 'react-hot-toast';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.query.value;\n    if (!query) {\n      toast.error('Please enter something');\n      return;\n    }\n    onSubmit(query);\n    evt.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} style={{ marginTop: '20px' }}>\n        <input name=\"query\" type=\"text\" style={{ width: '300px' }} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\nexport default SearchMovies;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMoviesByQuery } from 'services/api';\nimport SearchMovies from 'components/SearchMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  //const updateQueryString = evt => {\n  //const movieIdValue = evt.target.value;\n  //if (movieIdValue === '') {\n  //return setSearchParams({});\n  //}\n  //setSearchParams({ movieId: movieIdValue });\n  //};\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMoviesByQuery(query);\n        if (results.length === 0) {\n          toast.error('Movie not found. Please try again.');\n        } else {\n          setMovies(results);\n          console.log(results);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n    getMovie();\n  }, [searchParams]);\n\n  //пошук фільма//\n  const handleSubmit = query => {\n    setSearchParams({ query }); //записуєм в URL//\n  };\n\n  //const visibleMovies = movies.filter(movie => movie.includes(movieId));\n\n  return (\n    <main>\n      <SearchMovies onSubmit={handleSubmit} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0638d4937acfae28483912f2b585d98b'; //персональний ключ\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["onSubmit","evt","preventDefault","query","target","elements","value","reset","toast","style","marginTop","name","type","width","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovie","fetchMoviesByQuery","results","length","console","log","message","map","movie","to","id","state","from","title","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMoviesById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}